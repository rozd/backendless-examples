<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" currentState="login"
         xmlns:ns="http://www.spicefactory.org/parsley">
	
	<fx:Script>
		<![CDATA[

        import com.backendless.examples.flex.login.presentation.ILoginPM;

        import mx.events.FlexEvent;

        import spark.events.IndexChangeEvent;

        [Inject]
        [Bindable]
        public var model:ILoginPM;

        protected function buttonbar_changeHandler(event:IndexChangeEvent):void
        {
            if (buttonbar.selectedItem)
                this.currentState = buttonbar.selectedItem.data;
        }

        protected function viewActivateHandler(event:FlexEvent):void
        {
            model.reset();

            currentState = "login";
        }

        ]]>
	</fx:Script>
	
	<fx:Declarations>
        <ns:Configure />
	</fx:Declarations>
	
	<s:states>
		<s:State name="login" />
		<s:State name="register" />
	</s:states>

    <s:Rect left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:SolidColor color="#FFFFFF" />
        </s:fill>
    </s:Rect>
	
	<s:VGroup left="0" right="0" top="0" paddingLeft="20" paddingTop="20" paddingRight="20" paddingBottom="20" gap="10" includeIn="login">
		<s:TextInput width="100%" height="40" prompt="Email Address" text="@{this.model.userLogin.email}" />
		<s:TextInput id="passwordInput" width="100%" height="40" prompt="Password" displayAsPassword="true" text="@{this.model.userLogin.password}" />
		<s:HGroup width="100%" gap="10">
			<s:Button styleName="btnPink" width="50%" height="40" label="Show Password" click="passwordInput.displayAsPassword = !passwordInput.displayAsPassword" />
			<s:Button styleName="btnPink" width="50%" height="40" label="Remember Me" />
		</s:HGroup>
		<s:Button styleName="btnBlue" width="100%" height="50" label="Login" click="model.login();" />
		<s:Group width="100%" includeInLayout="{this.model.loginErrorString}" visible="{this.model.loginErrorString}">
			<s:Rect left="0" top="0" right="0" bottom="0">
				<s:stroke>
					<s:SolidColorStroke color="#EED2D7" />
				</s:stroke>
				<s:fill>
					<s:SolidColor color="#F2DEDD" />
				</s:fill>
			</s:Rect>
			<s:Label left="10" top="10" right="10" bottom="10" color="#BB4A46" width="100%" maxDisplayedLines="4" text="{this.model.loginErrorString}" />
		</s:Group>
	</s:VGroup>
	
	<s:VGroup left="0" top="0" right="0" paddingLeft="20" paddingTop="20" paddingRight="20" paddingBottom="20" gap="10" includeIn="register">
		<s:TextInput width="100%" height="40" prompt="Name" text="@{this.model.userRegister.name}" />
		<s:TextInput width="100%" height="40" prompt="Password" displayAsPassword="true" text="@{this.model.userRegister.password}" />
		<s:TextInput width="100%" height="40" prompt="Verify Password" displayAsPassword="true" text="@{this.model.userRegister.passwordVerify}" />
		<s:TextInput width="100%" height="40" prompt="Email" text="@{this.model.userRegister.email}"/>
		<s:HGroup width="100%" gap="10">
			<s:Button styleName="btnPink" width="50%" height="50" label="Reset" click="model.reset();" includeIn="register" />
			<s:Button styleName="btnBlue" width="50%" height="50" label="Submit" click="model.register();" includeIn="register" />
		</s:HGroup>
		<s:Group width="100%" includeInLayout="{this.model.registerErrorString}" visible="{this.model.registerErrorString}">
			<s:Rect left="0" top="0" right="0" bottom="0">
				<s:stroke>
					<s:SolidColorStroke color="#EED2D7" />
				</s:stroke>
				<s:fill>
					<s:SolidColor color="#F2DEDD" />
				</s:fill>
			</s:Rect>
			<s:Label left="10" top="10" right="10" bottom="10" color="#BB4A46" width="100%" maxDisplayedLines="4" text="{this.model.registerErrorString}" />
		</s:Group>
	</s:VGroup>
	
	<s:Label horizontalCenter="0" bottom="80" text="Singning In..." includeInLayout="{this.model.isSigningIn}" visible="{this.model.isSigningIn}" />
	
	<s:Label horizontalCenter="0" bottom="80" text="Registering..." includeInLayout="{this.model.isRegistering}" visible="{this.model.isRegistering}" />
	
	<s:ButtonBar id="buttonbar" left="0" right="0" bottom="0" height="60" requireSelection="true" selectedIndex.login="0" selectedIndex.register="1" change="buttonbar_changeHandler(event)">
		<s:dataProvider>
			<s:ArrayList>
				<fx:Object label="Login" data="login" />
				<fx:Object label="Register" data="register" />
			</s:ArrayList>
		</s:dataProvider>
	</s:ButtonBar>
	
</s:Group>
